#!/bin/sh

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NO_COLOR='\033[0m'

if [ ! -f "$(dirname "$0")/_/husky.sh" ]; then
  printf "%bERROR%b: Git hooks not configured...\n" "$RED" "$NO_COLOR"
  printf '* Enabling git hooks: %b npx husky install%b\n' "$BLUE" "$NO_COLOR"
  printf '%b*>>> Installing git hooks by husky%b\n' "$RED" "$NO_COLOR"
  npx husky install'\n'
  printf '%bhusky - Git hooks installed%b' "$GREEN" "$NO_COLOR"
fi

# shellcheck source=./_/husky.sh
. "$(dirname "$0")/_/husky.sh"

npx --no-install commitlint --edit "$1"

printf "%b>>> Checking code formatting...%b\n" "$GREEN" "$NO_COLOR"

# grep -print lines matching a pattern, By  default,  grep  prints the matching lines.
# -E- Matcher Selection -E, --extended-regexp
# '\.(ts|js)$'- Interpret PATTERN as an extended regular expression
for file in $(git diff --cached --name-only | grep -E '\.(ts|js)$')
do
  git show ":$file"  | npm run prettier:fix --stdin --stdin-filename "$file"
  printf "* Prettier fix for file: %b"$file"%b\n" "$BLUE" "$NO_COLOR"
  if [ $? -ne 0 ]; then
    echo "Failed on staged file '$file'. Please check your code and try again."
    exit 1
  fi
done
